spring:
  application:
    name: service-client
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${POSTGRES_JDBC_URL:jdbc:postgresql://localhost:5432/postgres}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    hikari:
      maximum-pool-size: 10
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    url: ${POSTGRES_JDBC_URL:jdbc:postgresql://localhost:5432/postgres}
    user: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
  task:
    execution:
      thread-name-prefix: autohost-task-
      pool:
        core-size: 2
        max-size: 200
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: mail-receiver-
      pool:
        size: 2
  cache:
    jcache:
      config: classpath:ehcache.xml
  mvc:
    static-path-pattern: /static/**
  servlet:
    multipart:
      enabled: true
      max-file-size: 15MB
      max-request-size: 30MB
security:
  cors_url: ${CORS_URL:http://localhost:8000}
logging:
  level:
    com.telegrambot.marketplace: TRACE
    org:
      springframework: DEBUG
      flywaydb: DEBUG
      hibernate:
        sql: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
aws:
  s3:
    publicEndpoint: ${S3_PUBLIC_URL:publicEndpoint:9000}
    privateEndpoint: ${S3_PRIVATE_URL:privateEndpoint:9000}
    bucketName: ${S3_BUCKET_NAME:bucketName}
    accessKey: ${S3_ACCESS_KEY:accessKey}
    secretKey: ${S3_PRIVATE_KEY:privateKey}
bot:
  name: ${BOT_NAME:BotName}
  token: ${BOT_TOKEN:BotToken}
  adminUsername: ${BOT_ADMIN_USER:admin}
filesize:
  photo: 3145728
  video: 15728640
jwt:
  token:
    secret: O6|IucrVQ9
    algorithm: HmacSHA256
    expiration:
      access-token-hours: 24
      refresh-token-days: 90
      email-token-hours: 24
      jitsi-token-hours: 24
server:
  port: 8080
