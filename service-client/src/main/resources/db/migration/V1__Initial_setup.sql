-- V1__Initial_setup.sql

-- Create table for countries
CREATE TABLE countries (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    is_allowed BOOLEAN NOT NULL
);

-- Create table for cities
CREATE TABLE cities (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    is_allowed BOOLEAN NOT NULL,
    country_id BIGINT NOT NULL,
    CONSTRAINT fk_cities_countries FOREIGN KEY (country_id) REFERENCES countries(id),
    CONSTRAINT uc_cities_country_name UNIQUE (country_id, name)
);

-- Create table for districts
CREATE TABLE districts (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    is_allowed BOOLEAN NOT NULL,
    country_id BIGINT NOT NULL,
    city_id BIGINT NOT NULL,
    CONSTRAINT fk_districts_countries FOREIGN KEY (country_id) REFERENCES countries(id),
    CONSTRAINT fk_districts_cities FOREIGN KEY (city_id) REFERENCES cities(id),
    CONSTRAINT uc_districts_country_city_name UNIQUE (country_id, city_id, name)
);

-- Create table for users
CREATE TABLE users (
                       id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       name VARCHAR(255) NOT NULL,
                       chat_id VARCHAR(255) NOT NULL UNIQUE,
                       permissions VARCHAR(255) NOT NULL,
                       country_id BIGINT,
                       city_id BIGINT,
                       state_id BIGINT,
                       discount BIGINT NOT NULL DEFAULT 0 CHECK (discount >= 0),
                       user_name VARCHAR(255) UNIQUE,
                       password VARCHAR(255),
                       balance DECIMAL(19, 2) NOT NULL DEFAULT 0 CHECK (balance >= 0),
                       referrer_id BIGINT,
                       CONSTRAINT fk_users_countries FOREIGN KEY (country_id) REFERENCES countries(id),
                       CONSTRAINT fk_users_cities FOREIGN KEY (city_id) REFERENCES cities(id),
                       CONSTRAINT fk_users_referrer FOREIGN KEY (referrer_id) REFERENCES users(id)
);

-- Create table for states
CREATE TABLE states (
                        id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        state_type VARCHAR(255) NOT NULL,
                        value VARCHAR(500),
                        user_id BIGINT NOT NULL UNIQUE
);

-- Create table for baskets
CREATE TABLE baskets (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    total_sum DECIMAL(19, 2) NOT NULL DEFAULT 0 CHECK (total_sum >= 0),
    user_id BIGINT NOT NULL,
    CONSTRAINT fk_baskets_users FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Create table for product_categories
CREATE TABLE product_categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL,
    is_allowed BOOLEAN NOT NULL
);

-- Create table for product_subcategories
CREATE TABLE product_subcategories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL,
    is_allowed BOOLEAN NOT NULL,
    product_category_id BIGINT NOT NULL,
    CONSTRAINT fk_product_subcategories_product_categories FOREIGN KEY (product_category_id) REFERENCES product_categories(id),
    CONSTRAINT uc_product_subcategories_name UNIQUE (name)
);

-- Create table for products
CREATE TABLE products (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    is_allowed BOOLEAN NOT NULL,
    product_category_id BIGINT,
    product_subcategory_id BIGINT,
    description TEXT,
    photo_url VARCHAR(255),
    CONSTRAINT fk_products_product_categories FOREIGN KEY (product_category_id) REFERENCES product_categories(id),
    CONSTRAINT fk_products_product_subcategories FOREIGN KEY (product_subcategory_id) REFERENCES product_subcategories(id),
    CONSTRAINT uc_products_product_subcategory_name UNIQUE (product_subcategory_id, name)
);

-- Create table for user_subcategory_discounts
CREATE TABLE user_subcategory_discounts (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    product_subcategory_id BIGINT NOT NULL,
    discount DECIMAL(19, 2) NOT NULL DEFAULT 0 CHECK (discount >= 0),
    CONSTRAINT fk_user_subcategory_discounts_users FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT fk_user_subcategory_discounts_product_subcategories FOREIGN KEY (product_subcategory_id) REFERENCES product_subcategories(id),
    CONSTRAINT uc_user_subcategory_discounts_user_subcategory UNIQUE (user_id, product_subcategory_id)
);

-- Create table for orders
CREATE TABLE orders (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    product_id BIGINT,
    amount DECIMAL(19, 2) NOT NULL DEFAULT 0 CHECK (amount >= 0),
    product_subcategory_id BIGINT,
    product_category_id BIGINT,
    country_id BIGINT,
    city_id BIGINT,
    district_id BIGINT,
    price DECIMAL(19, 2) NOT NULL DEFAULT 0 CHECK (price >= 0),
    total_sum DECIMAL(19, 2) NOT NULL DEFAULT 0 CHECK (total_sum >= 0),
    basket_id BIGINT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_orders_users FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT fk_orders_products FOREIGN KEY (product_id) REFERENCES products(id),
    CONSTRAINT fk_orders_product_subcategories FOREIGN KEY (product_subcategory_id) REFERENCES product_subcategories(id),
    CONSTRAINT fk_orders_product_categories FOREIGN KEY (product_category_id) REFERENCES product_categories(id),
    CONSTRAINT fk_orders_countries FOREIGN KEY (country_id) REFERENCES countries(id),
    CONSTRAINT fk_orders_cities FOREIGN KEY (city_id) REFERENCES cities(id),
    CONSTRAINT fk_orders_districts FOREIGN KEY (district_id) REFERENCES districts(id),
    CONSTRAINT fk_orders_baskets FOREIGN KEY (basket_id) REFERENCES baskets(id)
);

-- Create table for product_inventory_cities
CREATE TABLE product_inventory_cities (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id BIGINT NOT NULL,
    product_subcategory_id BIGINT NOT NULL,
    product_category_id BIGINT NOT NULL,
    city_id BIGINT NOT NULL,
    country_id BIGINT NOT NULL,
    quantity DECIMAL(19, 2) NOT NULL DEFAULT 0 CHECK (quantity >= 0),
    CONSTRAINT fk_product_inventory_cities_products FOREIGN KEY (product_id) REFERENCES products(id),
    CONSTRAINT fk_product_inventory_cities_product_subcategories FOREIGN KEY (product_subcategory_id) REFERENCES product_subcategories(id),
    CONSTRAINT fk_product_inventory_cities_product_categories FOREIGN KEY (product_category_id) REFERENCES product_categories(id),
    CONSTRAINT fk_product_inventory_cities_cities FOREIGN KEY (city_id) REFERENCES cities(id),
    CONSTRAINT fk_product_inventory_cities_countries FOREIGN KEY (country_id) REFERENCES countries(id),
    CONSTRAINT uc_product_inventory_cities_country_city_product UNIQUE (country_id, city_id, product_id, product_subcategory_id)
);

-- Create table for product_inventory_districts
CREATE TABLE product_inventory_districts (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id BIGINT NOT NULL,
    product_subcategory_id BIGINT NOT NULL,
    product_category_id BIGINT NOT NULL,
    district_id BIGINT NOT NULL,
    city_id BIGINT NOT NULL,
    country_id BIGINT NOT NULL,
    quantity DECIMAL(19, 2) NOT NULL DEFAULT 0 CHECK (quantity >= 0),
    CONSTRAINT fk_product_inventory_districts_products FOREIGN KEY (product_id) REFERENCES products(id),
    CONSTRAINT fk_product_inventory_districts_product_subcategories FOREIGN KEY (product_subcategory_id) REFERENCES product_subcategories(id),
    CONSTRAINT fk_product_inventory_districts_product_categories FOREIGN KEY (product_category_id) REFERENCES product_categories(id),
    CONSTRAINT fk_product_inventory_districts_districts FOREIGN KEY (district_id) REFERENCES districts(id),
    CONSTRAINT fk_product_inventory_districts_cities FOREIGN KEY (city_id) REFERENCES cities(id),
    CONSTRAINT fk_product_inventory_districts_countries FOREIGN KEY (country_id) REFERENCES countries(id),
    CONSTRAINT uc_product_inventory_districts_country_city_district_product UNIQUE (country_id, city_id, district_id, product_id, product_subcategory_id)
);

-- Create table for product_portions
CREATE TABLE product_portions (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id BIGINT NOT NULL,
    product_subcategory_id BIGINT NOT NULL,
    product_category_id BIGINT NOT NULL,
    district_id BIGINT NOT NULL,
    city_id BIGINT NOT NULL,
    country_id BIGINT NOT NULL,
    reserved BOOLEAN NOT NULL,
    amount DECIMAL(19, 2) NOT NULL DEFAULT 0 CHECK (amount >= 0),
    latitude DECIMAL(19, 2) NOT NULL,
    longitude DECIMAL(19, 2) NOT NULL,
    photo_url VARCHAR(255) NOT NULL,
    CONSTRAINT fk_product_portions_products FOREIGN KEY (product_id) REFERENCES products(id),
    CONSTRAINT fk_product_portions_product_subcategories FOREIGN KEY (product_subcategory_id) REFERENCES product_subcategories(id),
    CONSTRAINT fk_product_portions_product_categories FOREIGN KEY (product_category_id) REFERENCES product_categories(id),
    CONSTRAINT fk_product_portions_districts FOREIGN KEY (district_id) REFERENCES districts(id),
    CONSTRAINT fk_product_portions_cities FOREIGN KEY (city_id) REFERENCES cities(id),
    CONSTRAINT fk_product_portions_countries FOREIGN KEY (country_id) REFERENCES countries(id)
);

ALTER TABLE users
    ADD CONSTRAINT fk_users_states FOREIGN KEY (state_id) REFERENCES states(id);
ALTER TABLE states
    ADD CONSTRAINT fk_states_users FOREIGN KEY (user_id) REFERENCES users(id);



-- Create indexes
CREATE INDEX idx_baskets_user_id ON baskets(user_id);
CREATE INDEX idx_cities_country_id ON cities(country_id);
CREATE INDEX idx_countries_name ON countries(name);
CREATE INDEX idx_districts_city_id ON districts(city_id);
CREATE INDEX idx_districts_country_id ON districts(country_id);
CREATE INDEX idx_orders_basket_id ON orders(basket_id);
CREATE INDEX idx_orders_city_id ON orders(city_id);
CREATE INDEX idx_orders_country_id ON orders(country_id);
CREATE INDEX idx_orders_district_id ON orders(district_id);
CREATE INDEX idx_orders_product_category_id ON orders(product_category_id);
CREATE INDEX idx_orders_product_id ON orders(product_id);
CREATE INDEX idx_orders_product_subcategory_id ON orders(product_subcategory_id);
CREATE INDEX idx_orders_user_id ON orders(user_id);
CREATE INDEX idx_orders_created_at ON orders(created_at);
CREATE INDEX idx_product_categories_isAllowed ON product_categories(is_allowed);
CREATE INDEX idx_product_categories_name ON product_categories(name);
CREATE INDEX idx_product_inventory_cities_city_id ON product_inventory_cities(city_id);
CREATE INDEX idx_product_inventory_cities_country_id ON product_inventory_cities(country_id);
CREATE INDEX idx_product_inventory_cities_product_category_id ON product_inventory_cities(product_category_id);
CREATE INDEX idx_product_inventory_cities_product_id ON product_inventory_cities(product_id);
CREATE INDEX idx_product_inventory_cities_product_subcategory_id ON product_inventory_cities(product_subcategory_id);
CREATE INDEX idx_product_inventory_districts_city_id ON product_inventory_districts(city_id);
CREATE INDEX idx_product_inventory_districts_country_id ON product_inventory_districts(country_id);
CREATE INDEX idx_product_inventory_districts_district_id ON product_inventory_districts(district_id);
CREATE INDEX idx_product_inventory_districts_product_category_id ON product_inventory_districts(product_category_id);
CREATE INDEX idx_product_inventory_districts_product_id ON product_inventory_districts(product_id);
CREATE INDEX idx_product_inventory_districts_product_subcategory_id ON product_inventory_districts(product_subcategory_id);
CREATE INDEX idx_product_portions_city_id ON product_portions(city_id);
CREATE INDEX idx_product_portions_country_id ON product_portions(country_id);
CREATE INDEX idx_product_portions_district_id ON product_portions(district_id);
CREATE INDEX idx_product_portions_product_category_id ON product_portions(product_category_id);
CREATE INDEX idx_product_portions_product_id ON product_portions(product_id);
CREATE INDEX idx_product_portions_product_subcategory_id ON product_portions(product_subcategory_id);
CREATE INDEX idx_users_country_id ON users(country_id);
CREATE INDEX idx_users_city_id ON users(city_id);
CREATE INDEX idx_users_state_id ON users(state_id);
CREATE INDEX idx_users_user_name ON users(user_name);
CREATE INDEX idx_users_chat_id ON users(chat_id);
CREATE INDEX idx_states_user_id ON states(user_id);
