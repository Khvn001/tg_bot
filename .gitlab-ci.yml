stages:
  - build
  - deploy

variables:
  POSTGRES_JDBC_URL: $POSTGRES_JDBC_URL
  POSTGRES_USERNAME: $POSTGRES_USERNAME
  POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  BOT_NAME: $BOT_NAME
  BOT_TOKEN: $BOT_TOKEN

build:
  stage: build
  image: maven:3.8.5-jdk-22
  script:
    - mvn clean install
  artifacts:
    paths:
      - target/service-client-0.0.1-SNAPSHOT.jar

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SERVER_SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan $SERVER_HOST >> ~/.ssh/known_hosts
  script:
    - scp -o StrictHostKeyChecking=no target/service-client-0.0.1-SNAPSHOT.jar $SERVER_USER@$SERVER_HOST:/usr/bot/service-client-0.0.1-SNAPSHOT.jar
    - |
      ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << 'EOF'
        export POSTGRES_JDBC_URL=$POSTGRES_JDBC_URL
        export POSTGRES_USERNAME=$POSTGRES_USERNAME
        export POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        export BOT_NAME=$BOT_NAME
        export BOT_TOKEN=$BOT_TOKEN

        cd /usr/bot

        pkill -f 'java -jar service-client-0.0.1-SNAPSHOT.jar' || true

        nohup java -jar service-client-0.0.1-SNAPSHOT.jar > bot.log 2>&1 &
      EOF