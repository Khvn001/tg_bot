plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0' apply false
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.telegrambot.marketplace'
version = '0.0.1-SNAPSHOT'
description = 'Telegram Bot created as marketplace'

allprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '22'
    targetCompatibility = '22'

    repositories {
        mavenCentral()
    }

    ext {
        springBootVersion = '3.3.0'
        hibernateCoreVersion = '6.5.2.Final'
        jakartaPersistenceApiVersion = '3.2.0'
        jakartaValidationApiVersion = '3.1.0'
        springCloudDependenciesVersion = '2023.0.2'
        telegrambotsVersion = '6.9.7.1'
        logstashVersion = '7.4'
        logbackVersion = '1.5.6'
        postgresqlVersion = '42.7.3'
        flywayVersion = '10.15.0'
        mavenCheckstylePluginVersion = '3.4.0'
        checkstyleVersion = '10.2'
        commonsVersion = '3.14.0'
        commonsEmailVersion = '1.6.0'
        springdocOpenapiStarterWebmvcUiVersion = '2.6.0'
        modelmapperVersion = '3.2.0'
        jacksonDatatypeJsr310Version = '2.17.1'
        springBootMavenPluginVersion = '3.3.0'
        mavenJarPluginVersion = '3.1.0'
        mavenFailsafePluginVersion = '3.2.5'
        mavenSurefirePluginVersion = '3.2.5'
        validatorVersion = '1.9.0'
        mockitoInlineVersion = '4.6.1'
        testcontainersVersion = '1.19.8'
        wiremockVersion = '3.0.1'
        lokiLogbackAppenderVersion = '1.3.2'
        awsJavaSdkVersion = '1.12.751'
        jaxbVersion = '2.3.1'
        glassfishJaxbVersion = '4.0.5'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudDependenciesVersion"
        }
        dependencies {
            dependency "org.hibernate:hibernate-core:$hibernateCoreVersion"
            dependency "jakarta.persistence:jakarta.persistence-api:$jakartaPersistenceApiVersion"
            dependency "jakarta.validation:jakarta.validation-api:$jakartaValidationApiVersion"
            dependency "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocOpenapiStarterWebmvcUiVersion"
            dependency "org.springdoc:springdoc-openapi-starter-webmvc-api:$springdocOpenapiStarterWebmvcUiVersion"
            dependency "org.springdoc:springdoc-openapi-starter-common:$springdocOpenapiStarterWebmvcUiVersion"
            dependency "org.apache.commons:commons-lang3:$commonsVersion"
            dependency "org.apache.commons:commons-email:$commonsEmailVersion"
            dependency "commons-validator:commons-validator:$validatorVersion"
            dependency "org.modelmapper:modelmapper:$modelmapperVersion"
            dependency "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonDatatypeJsr310Version"
            dependency "org.testcontainers:testcontainers:$testcontainersVersion"
            dependency "org.testcontainers:postgresql:$testcontainersVersion"
            dependency "org.testcontainers:junit-jupiter:$testcontainersVersion"
            dependency "org.mockito:mockito-inline:$mockitoInlineVersion"
            dependency "org.wiremock:wiremock:$wiremockVersion"
            dependency "com.github.loki4j:loki-logback-appender:$lokiLogbackAppenderVersion"
            dependency "net.logstash.logback:logstash-logback-encoder:$logstashVersion"
            dependency "ch.qos.logback:logback-core:$logbackVersion"
            dependency "ch.qos.logback:logback-classic:$logbackVersion"
            dependency "javax.xml.bind:jaxb-api:$jaxbVersion"
            dependency "org.glassfish.jaxb:jaxb-runtime:$glassfishJaxbVersion"
        }
    }
}

subprojects {
    apply plugin: 'java'
}
